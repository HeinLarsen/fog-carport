@startuml
'https://plantuml.com/class-diagram

!pragma layout smetana

class User {
- int ID
- String firstFame
- String lastName
- String email
- int zip
- int phone
- String address
- String city
- int role
- int membership
- ArrayList<Order> orders
}

class UserFacade {
+ {static} ArrayList<User> getAllUsers()
+ {static} User login()
+ {static} User getUser()
+ {static} void updateUser()
+ {static} void deleteUser()
+ {static} void createUser()
}

class UserMapper {
+ {static} ArrayList<User> getAllUsers()
+ {static} User login()
+ {static} User getUser()
+ {static} void updateUser()
+ {static} void deleteUser()
+ {static} void createUser()
}

class Order {
- int orderID
- String timestamp
- Enum status
- ArrayList<Material> materials
}

class OrderFacade {
+ {static} ArrayList<Order> getAllOrders()
+ {static} Order getOrder()
+ {static} ArrayList<Order> getOrdersByUserId()
+ {static} void updateOrder()
+ {static} void deleteOrder()
+ {static} void createOrder()
+ {static} void approveOrder()
}

class OrderMapper {
+ {static} ArrayList<Order> getAllOrders()
+ {static} Order getOrder()
+ {static} ArrayList<Order> getOrdersByUserId()
+ {static} void updateOrder()
+ {static} void deleteOrder()
+ {static} void createOrder()
+ {static} void approveOrder()
}

class MaterialFacade {
+ {static} ArrayList<Material> getAllMaterials()
+ {static} void addWood()
+ {static} void addScrews()
+ {static} void addRoofTiles()
+ {static} void addFittings()
}

class MaterialMapper {
+ {static} ArrayList<Material> getAllMaterials()
+ {static} Material getMaterial()
+ {static} void addWood()
+ {static} void addScrews()
+ {static} void addRoofTiles()
+ {static} void addFittings()
}

class GenerateStl {
+ {static} void generateStl()
}

abstract class Material {
- String name
- int length
- double price
- String packaging
- String description
}

abstract class ExtraDimensionMaterial {
- int width
- int height
}

class RoofTile {
}

class Wood {
}

class Fitting {
}

abstract class ExtraDiameterMaterial {
- int diameter
}

class ScrewPack {
- int quantity
}

class Screw {
}

Enum Status {
    PENDING
    APPROVED
    CANCELLED
}

Material <|-- ExtraDimensionMaterial
ExtraDimensionMaterial <|-- RoofTile
ExtraDimensionMaterial <|-- Wood
ExtraDimensionMaterial <|-- Fitting
Material <|-- ExtraDiameterMaterial
ExtraDiameterMaterial <|-- ScrewPack
ExtraDiameterMaterial <|-- Screw

Order *-- Material
Order *-- Status
User *-- Order

@enduml