@startuml
'https://plantuml.com/class-diagram

class User {
- int ID
- String firstname
- String surname
- String email
- int role
- int membership
- ArrayList<Order> orders
}

class Order {
- int orderID
- String timestamp
- Enum status
- ArrayList<Screw> screws
- ArrayList<ScrewPack> screwPackages
- ArrayList<Wood> wood
- ArrayList<Fitting> fittings
- ArrayList<RoofTile> roofTiles
}

class UserMapper{
+ {static} ArrayList<User> getAllUsers()
+ {static} User getUser()
+ {static} void updateUser()
+ {static} void deleteUser()
+ {static} void createUser()
}

class OrderFacade{
+ {static} void updateOrder()
+ {static} void deleteOrder()
+ {static} void createOrder()
+ {static} void approveOrder()
}

class MaterialFacade{
+ {static} void addWood()
+ {static} void addScrews()
+ {static} void addRoofTiles()
+ {static} void addFittings()
}

class UserFacade{
+ {static} void updateUser()
+ {static} void deleteUser()
+ {static} void createUser()
}

class OrderMapper{
+ {static} ArrayList<Order> getAllOrders()
+ {static} Order getOrder()
+ {static} void updateOrder()
+ {static} void deleteOrder()
+ {static} void createOrder()
+ {static} approveOrder()
}

class MaterialMapper{
+ {static} getAllMaterials()
+ {static} getMaterial()
+ {static} addWood()
+ {static} addScrews()
+ {static} addRoofTiles()
+ {static} addFittings()
}

class RoofTile{
- String name
- int length
- int width
- double price
- String description
}

class Wood{
- String name
- int length
- int height
- int width
- double price
- String description
}

class Fitting{
- String name
- int length
- int height
- int width
- double price
- String description
}

class GenerateStl {
+ {static} generateStl()
}

interface AScrew{
- String name
- int length
- double price
- String description
}

class ScrewPack{
- int quantity
}

class Screw{
}

Enum Status {
    PENDING
    APPROVED
    CANCELLED
}

Order *-- Screw
Order *-- ScrewPack
Order *-- Fitting
Order *-- RoofTile
Order *-- Wood
Order *-- Status
User *-- Order
AScrew <-- ScrewPack
AScrew <-- Screw

@enduml